{"version":3,"file":"static/js/751.987779a8.chunk.js","mappings":"mQAEMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAuEZ,EApEqB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACtBC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIR,IAAgBS,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdd,EAA+Bc,EAA/Bd,KAAMe,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,QACrBC,EAAoB,aAATF,EAAsBC,EAAUF,EACjDJ,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAS,EAAAA,EAAAA,GAAA,GACPnB,EAAOkB,IAEZ,EAQME,EAAQ,WACZT,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAChB,EACMsB,GAASC,EAAAA,EAAAA,SACTC,GAAUD,EAAAA,EAAAA,SACVE,GAAaF,EAAAA,EAAAA,SAEXtB,EAA0BU,EAA1BV,KAAMC,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SAErB,OACEuB,EAAAA,EAAAA,MAAA,QAAMrB,SAhBa,SAAAsB,GACnBA,EAAEC,iBACFvB,GAAQG,EAAAA,EAAAA,GAAC,CAAC,EAAIG,IACdU,GACF,EAY+BQ,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAST,EAAOO,SAAC,UACxBC,EAAAA,EAAAA,KAAA,SACEd,MAAOf,EACP+B,SAAUnB,EACVZ,KAAK,OACLgC,GAAIX,EACJY,UAAQ,QAIZR,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASP,EAAQK,SAAC,WACzBC,EAAAA,EAAAA,KAAA,SACEd,MAAOd,EACP8B,SAAUnB,EACVI,KAAK,QACLhB,KAAK,QACLgC,GAAIT,EACJU,UAAQ,QAIZR,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASN,EAAWI,SAAC,cAC5BC,EAAAA,EAAAA,KAAA,SACEd,MAAOb,EACP6B,SAAUnB,EACVI,KAAK,WACLhB,KAAK,WACLgC,GAAIR,EACJS,UAAQ,QAGZJ,EAAAA,EAAAA,KAAA,UAAQb,KAAK,SAAQY,SAAC,cAG5B,E,8BCtCA,EAxBqB,WACnB,IAAMM,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MAMjB,OAAIH,GACKV,EAAAA,EAAAA,KAACc,EAAAA,GAAQ,CAACC,GAAG,eAIpBnB,EAAAA,EAAAA,MAAA,QAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACHM,IAAeL,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,KACvBhB,EAAAA,EAAAA,KAACiB,EAAY,CAAC1C,SAZG,SAAA2C,GACnBN,GAASO,EAAAA,EAAAA,GAASD,GACpB,IAWKV,IAAaR,EAAAA,EAAAA,KAAA,KAAGoB,MAAO,CAAEC,MAAO,OAAQtB,SAAES,MAGjD,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useId, useState } from 'react';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n  const nameId = useId();\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { name, email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor={nameId}>Name</label>\n        <input\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          id={nameId}\n          required\n        />\n      </div>\n\n      <div>\n        <label htmlFor={emailId}>Email</label>\n        <input\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          id={emailId}\n          required\n        />\n      </div>\n\n      <div>\n        <label htmlFor={passwordId}>Password</label>\n        <input\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          id={passwordId}\n          required\n        />\n      </div>\n      <button type=\"submit\">Sing Up</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { register } from '../redux/auth/auth-operations';\nimport {\n  selectAuthLoading,\n  selectAuthError,\n  selectAuthIsLogin,\n} from '../redux/auth/auth-selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst RegisterPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n  const isLogin = useSelector(selectAuthIsLogin);\n  const dispatch = useDispatch();\n\n  const handleSignUp = data => {\n    dispatch(register(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <main>\n      <h1>Please Sing Up</h1>\n      {authLoading && <Loader />}\n      <RegisterForm onSubmit={handleSignUp} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </main>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","type","checked","newValue","_defineProperty","reset","nameId","useId","emailId","passwordId","_jsxs","e","preventDefault","children","_jsx","htmlFor","onChange","id","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","isLogin","selectAuthIsLogin","dispatch","useDispatch","Navigate","to","Loader","RegisterForm","data","register","style","color"],"sourceRoot":""}