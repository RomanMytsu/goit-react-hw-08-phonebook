{"version":3,"file":"static/js/598.3bf09367.chunk.js","mappings":"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","sources":["components/ContactFilter/ContactFilter.styled.js","redux/Filter/filter-selectors.js","components/ContactFilter/ContactFilter.jsx","redux/Contacts/contacts-selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 30px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const FilterInput = styled.input`\n  display: block;\n  background-color: transparent;\n  min-width: 340px;\n  padding: 12px 24px;\n  border-radius: 4px;\n  color: #fff;\n  border: 2px solid #fff;\n`;\n","export const selectFilter = ({ filter }) => filter.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  FilterInput,\n  FilterLabel,\n  Wrap,\n} from './ContactFilter.styled';\n\nimport { updateFilter } from '../../redux/Filter/filterSlice';\nimport { selectFilter } from '../../redux/Filter/filter-selectors';\n\nexport const ContactFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(updateFilter(e.target.value));\n  };\n\n  return (\n    <Wrap>\n      <FilterLabel htmlFor=\"nameFilterInput\">\n        Find contacts by name\n        <FilterInput\n          id=\"nameFilterInput\"\n          type=\"text\"\n          value={filter}\n          onChange={handleFilterChange}\n        />\n      </FilterLabel>\n    </Wrap>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../../redux/Filter/filter-selectors';\n\nexport const selectContacts = ({ contacts }) => contacts.items;\n\nexport const selectIsLoading = ({ contacts }) => contacts.isLoading;\nexport const selectError = ({ contacts }) => contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 30px;\n`;\n\nexport const ContactFormContainer = styled.form`\n  border-radius: 4px;\n  border: 1px solid rgb(255, 255, 255);\n  padding: 48px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 8px;\n  width: 320px;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  width: 100%;\n  padding: 4px 12px;\n  font-weight: 600;\n  line-height: 1.5;\n  border-radius: 4px;\n`;\nexport const FormButton = styled.button`\n  padding: 8px 24px;\n  margin-top: 16px;\n  background-color: #e6b333;\n  border-radius: 4px;\n  font-weight: 600;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    color: #d3d3d3;\n    box-shadow: -5px -5px 20px rgba(230, 179, 51, 0.5),\n      5px 5px 20px rgba(201, 196, 196, 0.5);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/Contacts/contacts-selectors';\nimport { addContacts } from '../../redux/Contacts/contacts-operations';\n\nimport {\n  ContactFormContainer,\n  FormButton,\n  FormInput,\n  Wrap,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim() === '' || number.trim() === '') return;\n\n    const isExistingContact = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isExistingContact) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContacts(newContact));\n    setName('');\n    setNumber('');\n  };\n  const newContact = { name: name, number: number };\n\n  return (\n    <Wrap>\n      <ContactFormContainer onSubmit={handleSubmit}>\n        <label htmlFor=\"nameInput\">Name</label>\n        <FormInput\n          id=\"nameInput\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"numberInput\">Number</label>\n        <FormInput\n          id=\"numberInput\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </ContactFormContainer>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 16px;\n  background-color: #f5f5f5;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  margin-bottom: 8px;\n  font-weight: 600;\n  color: #000;\n`;\n\nexport const ListItemButton = styled.button`\n  background-color: #e6b333;\n  color: #000;\n  border: none;\n  border-radius: 4px;\n  padding: 6px 12px;\n  margin-left: 24px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    color: #d3d3d3;\n    box-shadow: -5px -5px 20px rgba(230, 179, 51, 0.5),\n      5px 5px 20px rgba(201, 196, 196, 0.5);\n  }\n`;\n","import { ListItem, ListItemButton, } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ name, number, id, onDelete }) => {\n  return (\n    <ListItem>\n        <span>\n          {name}: {number}\n        </span>\n        <ListItemButton\n          type=\"button\"\n          onClick={() => {\n            onDelete(id);\n          }}\n        >\n          Delete\n        </ListItemButton>\n    </ListItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 30px;\n`;\n\nexport const ListContainer = styled.ul`\n  margin-bottom: 50px;\n  max-width: 344px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 10px;\n`;\n//   display: flex;\n//   flex-direction: column;\n//   width: 360px;\n//   gap: 10px;\n//   padding: 20px 20px;\n//   margin: 0;\n// `;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from '../../redux/Contacts/contacts-selectors';\nimport {\n  deleteContacts,\n  fetchContacts,\n} from '../../redux/Contacts/contacts-operations';\n\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { ListContainer, Wrap } from './ContactList.styled';\nimport { useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isError = useSelector(selectError);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <Wrap>\n      {isLoading && <Loader />}\n      {!filteredContacts.length && !isLoading && !isError && (\n        <p>There are no contacts</p>\n      )}\n      {filteredContacts.length > 0 && (\n        <ListContainer>\n          {filteredContacts.map(({ id, name, number }) => {\n            return (\n              <ContactListItem\n                key={id}\n                name={name}\n                number={number}\n                id={id}\n                onDelete={handleDeleteContact}\n              />\n            );\n          })}\n        </ListContainer>\n      )}\n    </Wrap>\n  );\n};\n","import { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <ContactFilter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Wrap","styled","_templateObject","_taggedTemplateLiteral","FilterLabel","_templateObject2","FilterInput","_templateObject3","selectFilter","_ref","filter","ContactFilter","useSelector","dispatch","useDispatch","_jsx","children","_jsxs","htmlFor","id","type","value","onChange","e","updateFilter","target","selectContacts","contacts","items","selectIsLoading","_ref2","isLoading","selectError","_ref3","error","selectFilteredContacts","createSelector","_ref4","name","toLowerCase","includes","ContactFormContainer","FormInput","FormButton","_templateObject4","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","_e$target","newContact","onSubmit","preventDefault","trim","some","contact","alert","concat","addContacts","pattern","title","required","ListItem","ListItemButton","ContactListItem","onDelete","onClick","ListContainer","ContactList","isError","filteredContacts","useEffect","fetchContacts","handleDeleteContact","deleteContacts","Loader","length","map","_Fragment"],"sourceRoot":""}