{"version":3,"file":"static/js/815.7a0ca37b.chunk.js","mappings":"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","sources":["components/RegisterForm/registerform.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 30px;\n`;\n\nexport const StyledForm = styled.form`\n  border-radius: 4px;\n  border: 1px solid rgb(255, 255, 255);\n  padding: 48px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 8px;\n  width: 320px;\n`;\n\nexport const StyledInput = styled.input`\n  display: block;\n  width: 100%;\n  padding: 4px 12px;\n  font-weight: 600;\n  line-height: 1.5;\n  border-radius: 4px;\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 8px 24px;\n  margin-top: 16px;\n  background-color: #e6b333;\n  border-radius: 4px;\n  font-weight: 600;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    color: #d3d3d3;\n    box-shadow: -5px -5px 20px rgba(230, 179, 51, 0.5),\n      5px 5px 20px rgba(201, 196, 196, 0.5);\n  }\n`;\n","import { useId, useState } from 'react';\nimport { StyledBtn, StyledForm, StyledInput, Wrap } from './registerform.styled';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n  const nameId = useId();\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { name, email, password } = state;\n\n  return (\n    <Wrap>\n      <StyledForm onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor={nameId}>Name</label>\n          <StyledInput\n            value={name}\n            onChange={handleChange}\n            name=\"name\"\n            id={nameId}\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor={emailId}>Email</label>\n          <StyledInput\n            value={email}\n            onChange={handleChange}\n            type=\"email\"\n            name=\"email\"\n            id={emailId}\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor={passwordId}>Password</label>\n          <StyledInput\n            value={password}\n            onChange={handleChange}\n            type=\"password\"\n            name=\"password\"\n            id={passwordId}\n            required\n          />\n        </div>\n        <StyledBtn type=\"submit\">Sign Up</StyledBtn>\n      </StyledForm>\n    </Wrap>\n  );\n};\n\nexport default RegisterForm;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { register } from '../../redux/auth/auth-operations';\nimport {\n  selectAuthLoading,\n  selectAuthError,\n} from '../../redux/auth/auth-selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst RegisterPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n  const dispatch = useDispatch();\n\n  const handleSignUp = data => {\n    dispatch(register(data));\n  };\n\n  return (\n    <main>\n      {authLoading && <Loader />}\n      <RegisterForm onSubmit={handleSignUp} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </main>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Wrap","styled","_templateObject","_taggedTemplateLiteral","StyledForm","_templateObject2","StyledInput","_templateObject3","StyledBtn","_templateObject4","INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","type","checked","newValue","_defineProperty","reset","nameId","useId","emailId","passwordId","_jsx","children","_jsxs","e","preventDefault","htmlFor","onChange","id","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","Loader","RegisterForm","data","register","style","color"],"sourceRoot":""}