{"version":3,"file":"static/js/501.14e7a2ec.chunk.js","mappings":"sRAEMA,EAAgB,CACpBC,MAAO,GACPC,SAAU,IA4DZ,EAzDkB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACnBC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIP,IAAgBQ,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,MAAOC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QACrBC,EAAoB,aAATF,EAAsBC,EAAUF,EACjDL,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAU,EAAAA,EAAAA,GAAA,GACPL,EAAOI,IAEZ,EAQME,EAAQ,WACZV,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIP,GAChB,EAEMsB,GAAUC,EAAAA,EAAAA,SACVC,GAAaD,EAAAA,EAAAA,SAEXtB,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SAEf,OACEuB,EAAAA,EAAAA,MAAA,QAAMrB,SAhBa,SAAAsB,GACnBA,EAAEC,iBACFvB,GAAQG,EAAAA,EAAAA,GAAC,CAAC,EAAIG,IACdW,GACF,EAY+BO,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASR,EAAQM,SAAC,WACzBC,EAAAA,EAAAA,KAAA,SACEb,MAAOf,EACP8B,SAAUnB,EACVK,KAAK,QACLF,KAAK,QACLiB,GAAIV,EACJW,UAAQ,QAIZR,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASN,EAAWI,SAAC,cAC5BC,EAAAA,EAAAA,KAAA,SACEb,MAAOd,EACP6B,SAAUnB,EACVK,KAAK,WACLF,KAAK,WACLiB,GAAIR,EACJS,UAAQ,QAGZJ,EAAAA,EAAAA,KAAA,UAAQZ,KAAK,SAAQW,SAAC,YAG5B,EC/BA,EApBkB,WAChB,IAAMM,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAExBC,GAAWC,EAAAA,EAAAA,MAMjB,OACEf,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAb,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACHM,IAAeL,EAAAA,EAAAA,KAACa,EAAAA,EAAM,KACvBb,EAAAA,EAAAA,KAACc,EAAS,CAACvC,SARK,SAAAwC,GAClBL,GAASM,EAAAA,EAAAA,IAAMD,GACjB,IAOKP,IAAaR,EAAAA,EAAAA,KAAA,KAAGiB,MAAO,CAAEC,MAAO,OAAQnB,SAAES,MAGjD,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { useId, useState } from 'react';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor={emailId}>Email</label>\n        <input\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          id={emailId}\n          required\n        />\n      </div>\n\n      <div>\n        <label htmlFor={passwordId}>Password</label>\n        <input\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          id={passwordId}\n          required\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { login } from '../redux/auth/auth-operations';\nimport {\n  selectAuthLoading,\n  selectAuthError,\n} from '../redux/auth/auth-selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <>\n      <h1>Log In</h1>\n      {authLoading && <Loader />}\n      <LoginForm onSubmit={handleLogin} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["INITIAL_STATE","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","name","value","type","checked","newValue","_defineProperty","reset","emailId","useId","passwordId","_jsxs","e","preventDefault","children","_jsx","htmlFor","onChange","id","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","_Fragment","Loader","LoginForm","data","login","style","color"],"sourceRoot":""}