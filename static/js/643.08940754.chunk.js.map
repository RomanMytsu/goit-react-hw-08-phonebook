{"version":3,"file":"static/js/643.08940754.chunk.js","mappings":"oRAEaA,EAAOC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8EAMjBC,EAAaH,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+LAWxBG,EAAcL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oIAS1BK,EAAYP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sV,2KCpBhCO,EAAgB,CACpBC,MAAO,GACPC,SAAU,IA8DZ,EA3DkB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACnBC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIP,IAAgBQ,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,MAAOC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QACrBC,EAAoB,aAATF,EAAsBC,EAAUF,EACjDL,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAU,EAAAA,EAAAA,GAAA,GACPL,EAAOI,IAEZ,EAQME,EAAQ,WACZV,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIP,GAChB,EAEMsB,GAAUC,EAAAA,EAAAA,SACVC,GAAaD,EAAAA,EAAAA,SAEXtB,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SAEf,OACEuB,EAAAA,EAAAA,KAACnC,EAAAA,GAAI,CAAAoC,UACHC,EAAAA,EAAAA,MAACjC,EAAAA,GAAU,CAACU,SAjBK,SAAAwB,GACnBA,EAAEC,iBACFzB,GAAQG,EAAAA,EAAAA,GAAC,CAAC,EAAIG,IACdW,GACF,EAauCK,SAAA,EACjCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOK,QAASR,EAAQI,SAAC,WACzBD,EAAAA,EAAAA,KAAC7B,EAAAA,GAAW,CACVoB,MAAOf,EACP8B,SAAUnB,EACVK,KAAK,QACLF,KAAK,QACLiB,GAAIV,EACJW,UAAQ,QAIZN,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOK,QAASN,EAAWE,SAAC,cAC5BD,EAAAA,EAAAA,KAAC7B,EAAAA,GAAW,CACVoB,MAAOd,EACP6B,SAAUnB,EACVK,KAAK,WACLF,KAAK,WACLiB,GAAIR,EACJS,UAAQ,QAGZR,EAAAA,EAAAA,KAAC3B,EAAAA,EAAS,CAACmB,KAAK,SAAQS,SAAC,cAIjC,ECxCA,EAnBkB,WAChB,IAAMQ,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAExBC,GAAWC,EAAAA,EAAAA,MAMjB,OACEb,EAAAA,EAAAA,MAAAc,EAAAA,SAAA,CAAAf,SAAA,CACGQ,IAAeT,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,KACvBjB,EAAAA,EAAAA,KAACkB,EAAS,CAACvC,SAPK,SAAAwC,GAClBL,GAASM,EAAAA,EAAAA,IAAMD,GACjB,IAMKP,IAAaZ,EAAAA,EAAAA,KAAA,KAAGqB,MAAO,CAAEC,MAAO,OAAQrB,SAAEW,MAGjD,C","sources":["components/RegisterForm/registerform.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 30px;\n`;\n\nexport const StyledForm = styled.form`\n  border-radius: 4px;\n  border: 1px solid rgb(255, 255, 255);\n  padding: 48px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 8px;\n  width: 320px;\n`;\n\nexport const StyledInput = styled.input`\n  display: block;\n  width: 100%;\n  padding: 4px 12px;\n  font-weight: 600;\n  line-height: 1.5;\n  border-radius: 4px;\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 8px 24px;\n  margin-top: 16px;\n  background-color: #e6b333;\n  border-radius: 4px;\n  font-weight: 600;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    color: #d3d3d3;\n    box-shadow: -5px -5px 20px rgba(230, 179, 51, 0.5),\n      5px 5px 20px rgba(201, 196, 196, 0.5);\n  }\n`;\n","import { useId, useState } from 'react';\nimport {\n  StyledBtn,\n  StyledForm,\n  StyledInput,\n  Wrap,\n} from 'components/RegisterForm/registerform.styled';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { email, password } = state;\n\n  return (\n    <Wrap>\n      <StyledForm onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor={emailId}>Email</label>\n          <StyledInput\n            value={email}\n            onChange={handleChange}\n            type=\"email\"\n            name=\"email\"\n            id={emailId}\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor={passwordId}>Password</label>\n          <StyledInput\n            value={password}\n            onChange={handleChange}\n            type=\"password\"\n            name=\"password\"\n            id={passwordId}\n            required\n          />\n        </div>\n        <StyledBtn type=\"submit\">Login</StyledBtn>\n      </StyledForm>\n    </Wrap>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { login } from '../../redux/auth/auth-operations';\nimport {\n  selectAuthLoading,\n  selectAuthError,\n} from '../../redux/auth/auth-selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <>\n      {authLoading && <Loader />}\n      <LoginForm onSubmit={handleLogin} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Wrap","styled","_templateObject","_taggedTemplateLiteral","StyledForm","_templateObject2","StyledInput","_templateObject3","StyledBtn","_templateObject4","INITIAL_STATE","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","name","value","type","checked","newValue","_defineProperty","reset","emailId","useId","passwordId","_jsx","children","_jsxs","e","preventDefault","htmlFor","onChange","id","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","_Fragment","Loader","LoginForm","data","login","style","color"],"sourceRoot":""}